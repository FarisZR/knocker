name: CI

on:
  pull_request:
    branches: [ "main" ]
  push:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: pip install -r src/requirements.txt

    - name: Run unit tests
      run: PYTHONPATH=src python3 -m pytest

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Run docker compose stack
      run: docker compose -f dev/docker-compose.yml up -d --build

    - name: Wait for services to be healthy
      run: sleep 10 # Simple wait for services to start

    - name: Run integration test
      run: |
        # 1. Try to access protected route (should fail with 401)
        if curl -s -o /dev/null -w "%{http_code}" -H "X-Forwarded-For: 1.1.1.1" http://localhost/private | grep -q "401"; then
          echo "✅ Protected route correctly returned 401"
        else
          echo "❌ Protected route did not return 401"
          exit 1
        fi

        # 2. Perform the knock
        API_KEY=$(grep 'key: "CHANGE_ME_SUPER_SECRET_ADMIN_KEY"' ./knocker.example.yaml | awk -F '"' '{print $2}')
        if curl -s -X POST -H "X-Api-Key: $API_KEY" -H "X-Forwarded-For: 127.0.0.1" http://localhost/knock | grep -q "whitelisted_entry"; then
          echo "✅ Knock successful"
        else
          echo "❌ Knock failed"
          exit 1
        fi

        # 3. Try to access protected route again (should succeed with 200)
        if curl -s -o /dev/null -w "%{http_code}" -H "X-Forwarded-For: 127.0.0.1" http://localhost/private | grep -q "200"; then
          echo "✅ Protected route correctly returned 200 after knock"
        else
          echo "❌ Protected route did not return 200 after knock"
          exit 1
        fi