services:
  caddy:
    image: caddy:latest
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp" # For HTTP/3
    networks:
      - caddy_net
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - ../knocker.example.yaml:/app/knocker.yaml:ro
      - caddy_data:/data
      - caddy_config:/config
    command: ["caddy", "run", "--config", "/etc/caddy/Caddyfile", "--watch"]
    depends_on:
      - knocker

  knocker:
    build:
      context: ..
      dockerfile: Dockerfile
    restart: unless-stopped
    networks:
      - caddy_net
    environment:
      - KNOCKER_CONFIG_PATH=/app/knocker-firewall.yaml
      - DBUS_SYSTEM_BUS_ADDRESS=unix:path=/var/run/dbus/system_bus_socket
    volumes:
      - ../knocker.example.yaml:/app/knocker.yaml:ro
      - ../knocker-firewall.example.yaml:/app/knocker-firewall.yaml:ro
      - knocker_data:/data
      - /var/run/dbus:/var/run/dbus:ro
    ports:
      - "8000:8000"
    # The command is in the Dockerfile, but we could override it here if needed.
    # The application will look for 'knocker.yaml' in its root directory.

  # Firewalld container removed — use host firewalld and host DBus socket.
  # The knocker service mounts the host /var/run/dbus and sets DBUS_SYSTEM_BUS_ADDRESS
  # so it can talk to the host's firewalld via the host DBus socket when running real integration tests.

  # knocker-firewall service removed — use host firewalld and expose DBus socket to the knocker container.
  # To run real integration tests, start the knocker service (above) which now mounts /var/run/dbus
  # and sets DBUS_SYSTEM_BUS_ADDRESS so it talks to the host firewalld via the host DBus socket.

networks:
  caddy_net:
    # Enable IPv6 for this network
    enable_ipv6: true
    driver: bridge
    ipam:
      driver: default
      config:
        # Define subnets for both IPv4 and IPv6.
        # Your 'trusted_proxies' in knocker.yaml should include these.
        - subnet: 172.29.238.0/24
        - subnet: fd00:dead:c0de::/64

volumes:
  caddy_data:
  caddy_config:
  knocker_data:
  knocker_firewall_data:
  firewalld_config: